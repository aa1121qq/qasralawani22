<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8">
  <title>متجر الفروع - المعذر فقط</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    :root {
      --primary: #035cb1;
      --accent: #13c391;
      --danger: #e44545;
      --bg: #c5c8cf;
      --card: #fff;
      --gray: #cccccc;
      --gray-light: #f4f4f4;
    }
    body {
      font-family: 'Cairo', Arial, sans-serif;
      background: var(--bg);
      margin: 0;
      min-height: 100vh;
    }
    .main-wrapper {
      max-width: 1100px;
      margin: 55px auto 0;
      padding: 30px 30px 60px 30px;
      background: var(--card);
      border-radius: 18px;
      box-shadow: 0 8px 32px #0001;
    }
    .products-title {font-size: 2.1rem; margin-bottom: 28px;}
    .products-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 34px;
    }
    .product-card {
      background: #fafbfe;
      border-radius: 16px;
      box-shadow: 0 3px 13px #0001;
      padding: 22px 18px 16px 18px;
      text-align: center;
      transition: box-shadow 0.2s;
    }
    .product-card:hover { box-shadow: 0 8px 20px #0002; }
    .product-img {
      width: 100px; height: 100px;
      object-fit: contain;
      margin-bottom: 10px;
    }
    .product-name { font-size: 1.15rem; margin-bottom: 8px;}
    .badge {
      display: inline-block; margin: 2px 4px 2px 0; font-size: 12px;
      background: var(--accent); color: #fff;
      padding: 2px 9px; border-radius: 8px;
    }
    .cart-btn {
      margin-top: 16px; background: var(--primary); color: #fff;
      border: none; padding: 8px 30px; border-radius: 13px; cursor: pointer;
      font-size: 1rem; transition: background 0.18s;
    }
    .cart-btn:disabled {background: #b8b8b8; cursor:not-allowed;}
    .cart-link {
      position: fixed; top: 20px; left: 30px; z-index: 10;
      background: #f4f4f4; color: var(--primary); font-weight: bold;
      font-size: 1.1rem;
      padding: 12px 30px;
      border-radius: 24px; box-shadow: 0 2px 9px #0001;
      cursor: pointer; transition: background 0.2s;
      border: 2px solid #eaeaea;
    }
    .cart-link:hover {background: #e4eefa;}
    .popup-bg {
      position: fixed; top: 0; left: 0; width: 100vw; height: 100vh;
      background: rgba(24, 34, 56, 0.23);
      display: flex; align-items: center; justify-content: center; z-index: 100;
    }
    .popup {
      background: var(--card); padding: 36px 32px;
      border-radius: 22px; box-shadow: 0 7px 32px #0002;
      min-width: 340px; text-align: center;
    }
    .popup select, .popup button {
      font-size: 1.1rem;
      padding: 8px 12px;
      margin: 7px 0;
      width: 90%;
      border-radius: 9px;
      border: 1.5px solid #ccc;
      outline: none;
      margin-bottom: 18px;
      background: #f6f8fa;
    }
    #confirm-location, #confirm-location:disabled {
      color: #222 !important;
      background: #f3f3f3 !important;
      opacity: 1;
    }
    .popup .skip-btn {
      background: none; color: var(--primary); border: none; cursor: pointer; font-size: 1.05rem; margin-top: 6px;
      text-decoration: underline;
    }
    .cart, .checkout {
      max-width: 820px; margin: 60px auto 0; background: var(--card);
      border-radius: 15px; box-shadow: 0 5px 18px #0002; padding: 22px 18px 28px 18px;
    }
    .cart h2, .checkout h2 {margin-top:0; margin-bottom: 20px;}
    .cart-items, .checkout-products {margin-bottom:20px;}
    .product-mini {
      display: flex; align-items: center; justify-content: space-between;
      border-bottom: 1px solid #eee; padding: 10px 0;
    }
    .product-mini:last-child {border-bottom:none;}
    .mini-name {flex:1;}
    .remove-btn {background: none; color: var(--danger); border:none; font-size:1.2rem; cursor: pointer;}
    .green {color: #13c391;}
    .red {color: var(--danger);}
    .shipping-options {
      display: flex; flex-direction: row; gap: 18px; margin-bottom: 24px; margin-top:10px;
      justify-content: flex-start; flex-wrap: wrap;
    }
    .option-box {
      flex: 1 1 230px;
      min-width: 190px;
      border: 1.5px solid #e6e6e6; border-radius: 13px; padding: 11px 13px 9px 13px; 
      background: #fafbfe;
      display: flex; flex-direction: column; align-items: flex-start; justify-content: flex-start;
      position: relative;
      min-height: 82px;
      transition: background 0.2s;
    }
    .option-header {
      display: flex; align-items: center; gap: 7px; width: 100%; margin-bottom: 4px;
    }
    .option-radio {
      width: 15px; height: 15px; accent-color: var(--primary); margin-left: 3px;
      cursor: pointer;
    }
    .option-title { font-weight: bold; font-size: 1.01rem;}
    .option-availability { font-size: 14px; color:#666; margin-bottom:3px;}
    .gray-text { color: #999 !important; }
    .gray-bg { background: #ededed !important; }
    .disabled-opt {
      color: #999 !important;
      background: #ededed !important;
      pointer-events: none;
      border: 1.5px solid #e0e0e0;
    }
    .checkout-products {margin:0 0 8px 0; width:100%;}
    .complete-btn {background: var(--accent); color: #fff; padding: 10px 32px; border: none; border-radius: 11px; cursor: pointer; font-size:1.12rem; display:block; margin:auto;}
    .complete-btn:disabled {background:#b9b9b9;}
    .shipping-products-list {margin:12px 0 0 0; padding:0 0 0 0; list-style:none;}
    .shipping-product-name {display:inline-block; margin:2px 0 2px 8px;}
    .shipping-product-name.green {color:var(--accent);}
    .shipping-product-name.red {color:var(--danger); font-weight:bold;}
    .delete-prod-btn {margin-right:4px; font-size:15px; color:var(--danger); border:none; background:none; cursor:pointer;}
    @media (max-width:950px) {
      .main-wrapper {max-width:98vw;}
      .products-grid {grid-template-columns: 1fr;}
      .cart-link {left: 8px;}
      .shipping-options {flex-direction:column;}
      .option-box {width:100%;}
    }
    @media (max-width:700px) {
      .main-wrapper {padding:8px;}
      .cart, .checkout {padding:10px;}
      .popup {min-width:90vw;}
    }
  </style>
</head>
<body>
<div id="popup-bg" class="popup-bg">
  <div class="popup">
    <h2 style="margin-bottom:17px;">اختر الحي</h2>
    <select id="district">
      <option value="" selected disabled>اختر الحي</option>
      <option value="حي المعذر">حي المعذر</option>
    </select><br>
    <button class="cart-btn" id="confirm-location" disabled>تأكيد</button>
    <br>
    <button class="skip-btn" onclick="skipLocation()">تخطي تحديد العنوان</button>
  </div>
</div>

<div class="cart-link" onclick="showCart()">
  🛒 السلة (<span id="cart-count">0</span>)
</div>

<div class="main-wrapper" id="main-wrapper">
  <div class="products-title">منتجاتنا</div>
  <div class="products-grid" id="products-list"></div>
</div>

<div id="cart" class="cart" style="display:none;">
  <h2>سلة التسوق</h2>
  <div class="cart-items" id="cart-items"></div>
  <button class="cart-btn" style="margin-top:18px;" onclick="goCheckout()">إكمال الطلب</button>
  <button class="cart-btn" style="background:#bbb;color:#333;margin-top:18px;" onclick="hideCart()">متابعة التسوق</button>
</div>

<div id="checkout" class="checkout" style="display:none;">
  <h2 style="margin-bottom:10px;">إكمال الطلب</h2>
  <div class="shipping-options" id="shipping-options"></div>
  <div id="selected-shipping-products"></div>
  <button class="complete-btn" id="final-complete-btn" onclick="submitOrder()" disabled>إتمام الطلب</button>
  <button class="cart-btn" style="background:#bbb;color:#333; margin-top:16px;" onclick="hideCheckout()">عودة</button>
</div>

<script>
const products = [
  {
    id: 1,
    name: "قلاية",
    image: "https://imgs.qasralawani.net/media/catalog/product/d/s/dsc_0507.jpg",
    stock: { 'فرع المعذر': 1, 'مخزن المتجر الالكتروني': 1 }
  },
  {
    id: 2,
    name: "ماكينة قهوة",
    image: "https://i.imgur.com/I0u1PLP.png",
    stock: { 'فرع المعذر': 0, 'مخزن المتجر الالكتروني': 1 }
  },
  {
    id: 3,
    name: "قدر ضغط",
    image: "https://i.imgur.com/rv9rbkY.png",
    stock: { 'فرع المعذر': 1, 'مخزن المتجر الالكتروني': 1 }
  },
  {
    id: 4,
    name: "عصارة فواكه",
    image: "https://i.imgur.com/HhWhBQC.png",
    stock: { 'فرع المعذر': 0, 'مخزن المتجر الالكتروني': 1 }
  },
  {
    id: 5,
    name: "ترمس شاي وقهوة",
    image: "https://i.imgur.com/xK7z6zg.png",
    stock: { 'فرع المعذر': 0, 'مخزن المتجر الالكتروني': 1 }
  },
  {
    id: 6,
    name: "مايكروييف",
    image: "https://i.imgur.com/bP3OKDT.png",
    stock: { 'فرع المعذر': 1, 'مخزن المتجر الالكتروني': 1 }
  },
];

// قائمة الفروع (للاستلام من المعرض)
const branches = [
  { name: "فرع المعذر", key: "فرع المعذر" },
];

let userDistrict = "";
let userSkipped = false;
let cart = [];
let selectedShipping = null;

document.getElementById("district").addEventListener("change", checkLocationFields);
function checkLocationFields() {
  let dist = document.getElementById("district").value;
  document.getElementById("confirm-location").disabled = !dist;
}

document.getElementById("confirm-location").onclick = () => {
  const dist = document.getElementById("district").value;
  if(dist) {
    userDistrict = dist;
    userSkipped = false;
    document.getElementById("popup-bg").style.display = "none";
    showProducts();
  }
}

function skipLocation() {
  userDistrict = "";
  userSkipped = true;
  document.getElementById("popup-bg").style.display = "none";
  showProducts();
}

function showProducts() {
  let html = "";
  products.forEach(p => {
    let available = userSkipped
      ? (p.stock['مخزن المتجر الالكتروني'] > 0)
      : (p.stock['فرع المعذر'] > 0);
    let badge = "";
    if (p.stock['مخزن المتجر الالكتروني'] > 0) badge += `<span class="badge">متوفر في المتجر الالكتروني</span>`;
    if (!userSkipped && p.stock['فرع المعذر'] > 0) badge += `<span class="badge" style="background:#1e97ed">متوفر في فرع المعذر</span>`;
    html += `
      <div class="product-card">
        <img src="${p.image}" class="product-img" alt="${p.name}">
        <div class="product-name">${p.name}</div>
        ${badge}
        <br>
        <button class="cart-btn" onclick="addToCart(${p.id})" ${available ? "" : "disabled"}>أضف للسلة</button>
      </div>
    `;
  });
  document.getElementById("products-list").innerHTML = html;
  updateCartCount();
}

function showCart() {
  document.getElementById("cart").style.display = "block";
  let html = "";
  cart.forEach(item => {
    const p = products.find(x=>x.id==item.id);
    html += `
      <div class="product-mini">
        <span class="mini-name">${p.name}</span>
        <button class="remove-btn" onclick="removeFromCart(${p.id})">✕</button>
      </div>
    `;
  });
  document.getElementById("cart-items").innerHTML = html || "<div>السلة فارغة</div>";
}

function hideCart() {
  document.getElementById("cart").style.display = "none";
}

function addToCart(id) {
  if(!cart.some(x=>x.id==id)) cart.push({id});
  updateCartCount();
  showCart();
}

function removeFromCart(id) {
  cart = cart.filter(x=>x.id != id);
  showCart();
  updateCartCount();
}

function updateCartCount() {
  document.getElementById("cart-count").textContent = cart.length;
}

function goCheckout() {
  document.getElementById("cart").style.display = "none";
  document.getElementById("checkout").style.display = "block";
  renderCheckout();
}

function hideCheckout() {
  document.getElementById("checkout").style.display = "none";
  showProducts();
}

function getShippingOptions() {
  const items = cart.map(c => {
    const prod = products.find(p => p.id == c.id);
    return {
      ...prod,
      inBranch: prod.stock['فرع المعذر'] > 0,
      inOnline: prod.stock['مخزن المتجر الالكتروني'] > 0
    }
  });

  let allowNormal = false;
  // إذا المستخدم لم يختر الموقع (skip) --> الشحن العادي متاح إذا كل المنتجات في مخزن المتجر الالكتروني
  if (userSkipped) {
    allowNormal = items.length > 0 && items.every(p => p.inOnline);
  } else {
    allowNormal = items.length > 0 && items.every(p => p.inBranch);
  }

  let normalProducts = items.map(p => ({
    id: p.id,
    name: p.name,
    available: userSkipped ? p.inOnline : p.inBranch
  }));

  // شحن سريع فقط إذا كل المنتجات في السلة متوفرة في فرع المعذر وتم اختيار حي المعذر
  let allowFast = !userSkipped && userDistrict === "حي المعذر" && items.length > 0 && items.every(p=>p.inBranch);

  // الاستلام من المعرض (المعذر فقط) إذا كل المنتجات متوفرة في فرع المعذر
  let allowStore = !userSkipped && userDistrict === "حي المعذر" && items.length > 0 && items.every(p=>p.inBranch);

  return [
    {
      key: "normal",
      label: "توصيل منزلي",
      icon: "🚚",
      available: allowNormal,
      count: normalProducts.filter(p=>p.available).length,
      total: items.length,
      products: normalProducts
    },
    {
      key: "fast",
      label: "شحن سريع",
      icon: "⚡",
      available: allowFast,
      count: allowFast ? items.length : 0,
      total: items.length,
      products: items.map(p => ({
        id: p.id,
        name: p.name,
        available: p.inBranch
      })),
      showCount: allowFast
    },
    {
      key: "store",
      label: "استلام من المعرض",
      icon: "🏪",
      available: allowStore,
      count: items.filter(p=>p.inBranch).length,
      total: items.length,
      products: items.map(p => ({
        id: p.id,
        name: p.name,
        available: p.inBranch,
        stock: p.stock
      }))
    }
  ];
}

// دالة عرض قائمة الفروع عند الاستلام من المعرض
function renderBranchesList(productsInCart) {
  let result = '<div style="margin:13px 0 5px 0;font-size:16px;">الفروع المتاحة:</div><ul style="list-style:none;padding:0;">';
  branches.forEach(branch => {
    let available = false;
    if (branch.key === "فرع المعذر" && productsInCart.length && productsInCart.every(p => p.stock && p.stock['فرع المعذر'] > 0)) {
      available = true;
    }
    result += `<li style="font-weight:bold; color:${available ? '#13c391' : '#e44545'};margin-bottom:6px;">${branch.name}</li>`;
  });
  result += '</ul>';
  return result;
}

function renderCheckout() {
  const options = getShippingOptions();
  let html = options.map(opt => {
    if(opt.key === "fast" && !opt.available){
      return `
      <div class="option-box disabled-opt">
        <div class="option-header">
          <input class="option-radio" type="radio" name="shipping" id="shipping-${opt.key}" value="${opt.key}" disabled>
          <label for="shipping-${opt.key}" class="option-title gray-text">${opt.label} ${opt.icon}</label>
        </div>
      </div>
      `;
    }
    return `
      <div class="option-box">
        <div class="option-header">
          <input class="option-radio" type="radio" name="shipping" id="shipping-${opt.key}" value="${opt.key}" ${selectedShipping===opt.key?'checked':''} onclick="selectShipping('${opt.key}')">
          <label for="shipping-${opt.key}" class="option-title">${opt.label} ${opt.icon}</label>
        </div>
        <div class="option-availability">${(opt.key==="fast"&&!opt.showCount)?"":`${opt.count} من ${opt.total} من المنتجات متوفرة`}</div>
      </div>
    `;
  }).join('');
  document.getElementById("shipping-options").innerHTML = html;

  renderSelectedShippingProducts();
  updateCompleteBtn();
}

function selectShipping(key) {
  selectedShipping = key;
  renderSelectedShippingProducts();
  updateCompleteBtn();
}

function renderSelectedShippingProducts() {
  if (!selectedShipping) {
    document.getElementById("selected-shipping-products").innerHTML = "";
    return;
  }
  const options = getShippingOptions();
  const opt = options.find(x=>x.key===selectedShipping);
  if (!opt) return;

  let html = "";
  // إذا الاستلام من المعرض، أضف قائمة الفروع
  if (selectedShipping === "store") {
    html += renderBranchesList(
      cart.map(c => products.find(p => p.id == c.id))
    );
  }
  html += `<ul class="shipping-products-list">`;
  opt.products.forEach(prod => {
    if(prod.available){
      html += `<li class="shipping-product-name green">✅ ${prod.name}</li>`;
    } else {
      html += `<li class="shipping-product-name red">❌ ${prod.name} <button class="delete-prod-btn" onclick="deleteProduct(${prod.id})">حذف</button></li>`;
    }
  });
  html += `</ul>`;
  document.getElementById("selected-shipping-products").innerHTML = html;
}

function deleteProduct(id) {
  cart = cart.filter(p=>p.id!==id);
  if(cart.length === 0){
    selectedShipping = null;
    document.getElementById("selected-shipping-products").innerHTML = "";
  }
  renderCheckout();
}

function updateCompleteBtn() {
  const options = getShippingOptions();
  const opt = options.find(x=>x.key===selectedShipping);
  const enable = !!(opt && opt.available && opt.products.some(p=>p.available));
  document.getElementById("final-complete-btn").disabled = !enable;
}

function submitOrder() {
  alert("تم إتمام الطلب بنجاح (" + selectedShipping + ")");
  cart = [];
  selectedShipping = null;
  hideCheckout();
  updateCartCount();
}

window.onload = function() { showProducts(); }
</script>
</body>
</html>
